{"mappings":"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","sources":["src/scripts.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar fibWithoutRecursionButton = document.querySelector('.fibNoRecursionButton');\nvar fibWithoutRecursionTextArea = document.querySelector('.fibNoRecursionResult textarea');\nvar fibWithRecursionButton = document.querySelector('.fibRecursionButton');\nvar fibWithRecursionTextArea = document.querySelector('.fibRecursionResult textarea');\nvar clearButton = document.querySelector('.clearButton');\n/*\nlet fibArr: number[] = [];\nlet fibRecurArr: number[] = [];\n*/\nvar limit = 15;\n// let sum: number, num1: number = 0, num2: number = 1;\nvar fibNoRecur = function (upperLimit) {\n    var num1 = 0;\n    var num2 = 1;\n    var sequence = [num1, num2];\n    for (var i = 1; i < upperLimit - 1; i++) {\n        var sum = num1 + num2;\n        num1 = num2;\n        num2 = sum;\n        sequence.push(sum);\n    }\n    return sequence;\n};\nconsole.log(fibNoRecur(15));\n/*\nconst showFibWithoutRecursion = (): void => {\n    console.log(fibArr)\n    fibArr.push(num1);\n    fibArr.push(num2);\n    console.log(fibArr)\n    for (let i: number = 2; i <= limit; i++) {\n        sum = num1 + num2;\n        fibArr.push(sum);\n        console.log(fibArr);\n        num1 = num2;\n        num2 = sum;\n    }\n    if (!fibWithoutRecursionTextArea.textContent) {\n        fibWithoutRecursionTextArea.textContent = `Here is the Fibonacci sequence done without recursion:  ${fibArr.join(', ')}.`;\n    }\n}\n*/\n/*\nconst showFibSequence = (textAreaEl: Element, fibFunc: Function, recur: boolean): void => {\n    const fibArr: number[] = fibFunc(limit);\n    if (!textAreaEl.textContent) {\n        textAreaEl.textContent = `Here is the Fibonacci sequence done with${recur ? `` : `out`} recursion:  ${fibArr.join(', ')}.`;\n    }\n}\n*/\nvar showFibSequence = function (textAreaEl, fibFunc, recur) {\n    var show = function () {\n        var fibArr = fibFunc(limit);\n        if (!textAreaEl.textContent) {\n            textAreaEl.textContent = \"Here is the Fibonacci sequence done with\".concat(recur ? \"\" : \"out\", \" recursion:  \").concat(fibArr.join(', '), \".\");\n        }\n    };\n    return show;\n};\n/*\nconst showFibWithoutRecursion = (): void => {\n    const fibArr: number[] = fibNoRecur(limit);\n    if (!fibWithoutRecursionTextArea.textContent) {\n    fibWithoutRecursionTextArea.textContent = `Here is the Fibonacci sequence done without recursion:  ${fibArr.join(', ')}.`;\n    }\n}\n*/\nvar fibRecur = function (n, memo) {\n    if (memo === void 0) { memo = []; }\n    if (n <= 2)\n        return n;\n    return fibRecur(n - 1, memo) + fibRecur(n - 2, memo);\n};\nvar fibRecurSequence = function (upperLimit) {\n    var mem1 = [];\n    var sequence = [0, 1];\n    for (var i = 1; i < upperLimit - 1; i++) {\n        sequence.push(fibRecur(i, mem1));\n    }\n    return sequence;\n};\nconsole.log(fibRecurSequence(15));\n/*\nconst showFibWithRecursion = (arr: number[]): void => {\n    console.log(arr);\n    arr.push(fibRecursion(limit, arr));\n    console.log(arr);\n    if (!fibWithRecursionTextArea.textContent) {\n        fibWithRecursionTextArea.textContent = `Here is the Fibonacci sequence done with recursion:  ${arr.join(', ')}.`;\n    }\n}\n*/\n/*\nconst showFibWithRecursion = (): void => {\n    let fibRecurArr: number[] = fibRecurSequence(limit);\n    if (!fibWithRecursionTextArea.textContent) {\n        fibWithRecursionTextArea.textContent = `Here is the Fibonacci sequence done with recursion:  ${fibRecurArr.join(', ')}.`;\n    }\n}\n*/\nvar clearAll = function () {\n    fibWithoutRecursionTextArea.textContent = '';\n    fibWithRecursionTextArea.textContent = '';\n    // fibArr, fibRecurArr = [];\n    // num1, sum = 0;\n    // num2 = 1;\n};\nvar withoutRecur = showFibSequence(fibWithoutRecursionTextArea, fibNoRecur, false);\nvar withRecur = showFibSequence(fibWithRecursionTextArea, fibRecurSequence, true);\nfibWithoutRecursionButton.addEventListener('click', withoutRecur);\nfibWithRecursionButton.addEventListener('click', withRecur);\nclearButton.addEventListener('click', clearAll);\n"],"names":[],"version":3,"file":"index.f68744d1.js.map","sourceRoot":"/__parcel_source_root/"}